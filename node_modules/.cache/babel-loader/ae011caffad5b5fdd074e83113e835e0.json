{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namas\\\\Downloads\\\\lifeInNumbers4-20211203T231224Z-001\\\\lifeInNumbers4\\\\src\\\\components\\\\personal.js\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from \"./Auth\";\nimport firebaseConfig from \"../firebase\";\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\nimport Form from \"./Form\";\nimport FilterButton from \"./FilterButton\";\nimport Todo from \"./Todo\";\nimport { nanoid } from 'nanoid';\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\n/*const PERSONAL = [\r\n  { id: \"todo-0\", name: \"Call David\", completed: true },\r\n  { id: \"todo-1\", name: \"Submit Registration Form\", completed: false },\r\n  { id: \"todo-2\", name: \"Meet Linda\", completed: false }\r\n];\r\n*/\n\nconst PERSONAL = [];\n\nfunction usePrevious(value) {\n  const ref = useRef();\n  useEffect(() => {\n    ref.current = value;\n  });\n  return ref.current;\n}\n\nconst FILTER_MAP = {\n  All: () => true,\n  Active: task => !task.completed,\n  Completed: task => task.completed\n};\nconst FILTER_NAMES = Object.keys(FILTER_MAP); // const datestring = newDateSelected.getDate() + \"-\" + (props.getMonth()+1) + \"-\" + props.getFullYear();\n// const Personal = () =>  {\n\nfunction Personal(props) {\n  // const [date, setDate] = useState(new Date());\n  // const datestring = props.getDate() + \"-\" + (props.getMonth()+1) + \"-\" + props.getFullYear();\n  const newDateString = dateStringConverter(props);\n  const [tasks, setTasks] = useState(PERSONAL);\n  const [filter, setFilter] = useState('All');\n  const [count, setCount] = useState(0);\n\n  function fetchDataFromFirebase() {\n    const db = getDatabase();\n    var user = firebaseConfig.auth().currentUser; // var d = new Date();\n    // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\n\n    const reference = ref(db, 'users/' + user.uid + '/' + newDateString + '/personal/');\n    let todoslist = [];\n    let todomap = {};\n    var i = 0;\n    onValue(reference, snapshot => {\n      snapshot.forEach(snapshot1 => {\n        var id = snapshot1.val().todoid;\n        const name = snapshot1.val().name;\n        const completed = snapshot1.val().completed;\n        var todoid = String(id);\n\n        if (todoid.includes(\"todo\") === true) {\n          todomap = {\n            id: id,\n            name: name,\n            completed: completed\n          };\n          todoslist.push(todomap);\n        }\n      });\n      setTasks(todoslist);\n    });\n  }\n\n  function CalculatePersonalScore() {\n    const db = getDatabase();\n    var user = firebaseConfig.auth().currentUser; // var d = new Date();\n    // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\n\n    const reference = ref(db, 'users/' + user.uid + '/' + datestring + '/personal/');\n    var completedTasks = 0;\n    var totalTaskCount = 0;\n    onValue(reference, snapshot => {\n      snapshot.forEach(snapshot1 => {\n        var id = snapshot1.val().todoid;\n        var todoid = String(id);\n        const completed = snapshot1.val().completed;\n\n        if (todoid.includes(\"todo\") === true) {\n          if (completed === true) {\n            completedTasks++;\n          }\n\n          totalTaskCount++;\n        }\n      });\n    });\n    var per = 0;\n    var percentage = 0;\n\n    if (totalTaskCount > 0) {\n      per = completedTasks / totalTaskCount * 100;\n      percentage = Math.floor(per);\n    }\n\n    setCount(percentage);\n    const reference1 = ref(db, 'users/' + user.uid + '/' + datestring + '/score/personalpercentage/');\n    set(reference1, {\n      percentage: percentage\n    });\n  }\n\n  function toggleTaskCompleted(id) {\n    const updatedTasks = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        // use object spread to make a new obkect\n        // whose `completed` prop has been inverted\n        const db = getDatabase();\n        var user = firebaseConfig.auth().currentUser; // var d = new Date();\n        // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\n\n        const reference = ref(db, 'users/' + user.uid + '/' + datestring + '/personal/' + id);\n        set(reference, {\n          todoid: task.id,\n          name: task.name,\n          completed: !task.completed\n        });\n        return { ...task,\n          completed: !task.completed\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks); //fetchDataFromFirebase();\n\n    CalculatePersonalScore();\n  }\n\n  function deleteTask(id) {\n    const remainingTasks = tasks.filter(task => id !== task.id); // setTasks(remainingTasks);\n\n    const db = getDatabase();\n    var user = firebaseConfig.auth().currentUser; // var d = new Date();\n    // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\n\n    const reference = ref(db, 'users/' + user.uid + '/' + datestring + '/personal/' + id);\n    set(reference, {\n      id: null\n    });\n    fetchDataFromFirebase();\n  }\n\n  function editTask(id, newName) {\n    const editedTaskList = tasks.map(task => {\n      // if this task has the same ID as the edited task\n      if (id === task.id) {\n        //\n        const db = getDatabase();\n        var user = firebaseConfig.auth().currentUser; // var d = new Date();\n        // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\n\n        const reference = ref(db, 'users/' + user.uid + '/' + datestring + '/personal/' + task.id);\n        set(reference, {\n          todoid: task.id,\n          name: newName,\n          completed: task.completed\n        });\n        return { ...task,\n          name: newName\n        };\n      }\n\n      return task;\n    });\n    fetchDataFromFirebase(); //setTasks(editedTaskList);\n  }\n\n  const taskList = tasks.filter(FILTER_MAP[filter]).map(task => /*#__PURE__*/React.createElement(Todo, {\n    id: task.id,\n    name: task.name,\n    completed: task.completed,\n    key: task.id,\n    toggleTaskCompleted: toggleTaskCompleted,\n    deleteTask: deleteTask,\n    editTask: editTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 3\n    }\n  }));\n  const filterList = FILTER_NAMES.map(name => /*#__PURE__*/React.createElement(FilterButton, {\n    key: name,\n    name: name,\n    isPressed: name === filter,\n    setFilter: setFilter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 3\n    }\n  }));\n\n  function addTask(name) {\n    const newTask = {\n      id: \"todo-\" + nanoid(),\n      name: name,\n      completed: false\n    }; //Database related\n\n    const db = getDatabase();\n    var user = firebaseConfig.auth().currentUser; // var d = new Date();\n    // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\n\n    const reference = ref(db, 'users/' + user.uid + '/' + datestring + '/personal/' + newTask.id);\n    set(reference, {\n      todoid: newTask.id,\n      name: newTask.name,\n      completed: newTask.completed\n    });\n    fetchDataFromFirebase(); //setTasks([...tasks, newTask]);\n  }\n\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\n  const listHeadingRef = useRef(null);\n  const prevTaskLength = usePrevious(tasks.length);\n  useEffect(() => {\n    fetchDataFromFirebase();\n    CalculatePersonalScore();\n\n    if (tasks.length - prevTaskLength === -1) {\n      listHeadingRef.current.focus();\n    }\n  }, [tasks.length, prevTaskLength]);\n  const {\n    currentUser\n  } = useContext(AuthContext);\n\n  if (!currentUser) {\n    return /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 10\n      }\n    });\n  }\n\n  let Progress = props => {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Progress\",\n      \"data-value\": props.value,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Progress-Bar\",\n      style: {\n        width: `${props.value}%`,\n        backgroundSize: `${100 * 100 / props.value}% 100%`\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"todoapp stack-large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }\n  }, \"Personal\"), /*#__PURE__*/React.createElement(Progress, {\n    value: count,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Form, {\n    addTask: addTask,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"filters btn-group stack-exception\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 7\n    }\n  }, filterList), /*#__PURE__*/React.createElement(\"h2\", {\n    id: \"list-heading\",\n    tabIndex: \"-1\",\n    ref: listHeadingRef,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"ul\", {\n    role: \"list\",\n    className: \"todo-list stack-large stack-exception\",\n    \"aria-labelledby\": \"list-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 7\n    }\n  }, taskList)));\n}\n\nexport default Personal;","map":{"version":3,"sources":["C:/Users/namas/Downloads/lifeInNumbers4-20211203T231224Z-001/lifeInNumbers4/src/components/personal.js"],"names":["Redirect","AuthContext","firebaseConfig","React","useState","useRef","useEffect","useContext","Form","FilterButton","Todo","nanoid","getDatabase","ref","onValue","set","PERSONAL","usePrevious","value","current","FILTER_MAP","All","Active","task","completed","Completed","FILTER_NAMES","Object","keys","Personal","props","newDateString","dateStringConverter","tasks","setTasks","filter","setFilter","count","setCount","fetchDataFromFirebase","db","user","auth","currentUser","reference","uid","todoslist","todomap","i","snapshot","forEach","snapshot1","id","val","todoid","name","String","includes","push","CalculatePersonalScore","datestring","completedTasks","totalTaskCount","per","percentage","Math","floor","reference1","toggleTaskCompleted","updatedTasks","map","deleteTask","remainingTasks","editTask","newName","editedTaskList","taskList","filterList","addTask","newTask","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","focus","Progress","width","backgroundSize"],"mappings":"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","sourcesContent":["import { Redirect } from \"react-router-dom\";\r\nimport { AuthContext } from \"./Auth\";\r\nimport firebaseConfig from \"../firebase\";\r\nimport React, { useState, useRef, useEffect, useContext } from \"react\";\r\nimport Form from \"./Form\";\r\nimport FilterButton from \"./FilterButton\";\r\nimport Todo from \"./Todo\";\r\nimport { nanoid } from 'nanoid';\r\nimport { getDatabase, ref, onValue, set } from 'firebase/database';\r\n\r\n\r\n/*const PERSONAL = [\r\n  { id: \"todo-0\", name: \"Call David\", completed: true },\r\n  { id: \"todo-1\", name: \"Submit Registration Form\", completed: false },\r\n  { id: \"todo-2\", name: \"Meet Linda\", completed: false }\r\n];\r\n*/\r\nconst PERSONAL = [];\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nconst FILTER_MAP = {\r\n  All: () => true,\r\n  Active: task => !task.completed,\r\n  Completed: task => task.completed\r\n};\r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\n// const datestring = newDateSelected.getDate() + \"-\" + (props.getMonth()+1) + \"-\" + props.getFullYear();\r\n\r\n// const Personal = () =>  {\r\n\r\nfunction Personal(props)  {\r\n\r\n// const [date, setDate] = useState(new Date());\r\n// const datestring = props.getDate() + \"-\" + (props.getMonth()+1) + \"-\" + props.getFullYear();\r\nconst newDateString = dateStringConverter(props);\r\n\r\nconst [tasks, setTasks] = useState(PERSONAL);\r\nconst [filter, setFilter] = useState('All');\r\nconst [count, setCount] = useState(0);\r\n\r\nfunction fetchDataFromFirebase() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  // var d = new Date();\r\n  // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ newDateString+ '/personal/');\r\n  let todoslist = [];\r\n  let todomap = {};\r\n  var i = 0;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      const name = snapshot1.val().name\r\n      const completed = snapshot1.val().completed\r\n      var todoid = String(id)\r\n      if (todoid.includes(\"todo\") === true) {\r\n        todomap = {\r\n          id: id,\r\n          name: name,\r\n          completed: completed\r\n        };\r\n        todoslist.push(todomap)\r\n      }\r\n    });   \r\n    setTasks(todoslist)\r\n  });\r\n  \r\n}\r\n\r\nfunction CalculatePersonalScore() {\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  // var d = new Date();\r\n  // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/');\r\n  var completedTasks = 0;\r\n  var totalTaskCount = 0 ;\r\n  onValue(reference, (snapshot) => {\r\n    snapshot.forEach(snapshot1 => {\r\n      var id = snapshot1.val().todoid\r\n      var todoid = String(id)\r\n    const completed = snapshot1.val().completed\r\n    if (todoid.includes(\"todo\") === true) {\r\n      if (completed === true) {\r\n    \r\n        completedTasks++\r\n      }\r\n      totalTaskCount++\r\n    }\r\n    });   \r\n  });\r\n  var per = 0\r\n  var percentage = 0\r\n  if (totalTaskCount > 0) {\r\n    per = (completedTasks/totalTaskCount) * 100\r\n    percentage = Math.floor(per)\r\n  }\r\n  setCount(percentage)\r\n  const reference1 = ref(db, 'users/' + user.uid +'/'+ datestring+ '/score/personalpercentage/');\r\n  set(reference1, {\r\n    percentage: percentage,\r\n  });\r\n}\r\n\r\nfunction toggleTaskCompleted(id) {\r\n  const updatedTasks = tasks.map(task => {\r\n    // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      // use object spread to make a new obkect\r\n      // whose `completed` prop has been inverted\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      // var d = new Date();\r\n      // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/' + id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : task.name,\r\n        completed : !task.completed\r\n      });\r\n      return {...task, completed: !task.completed}\r\n    }\r\n    return task;\r\n  });\r\n  setTasks(updatedTasks);\r\n  //fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n}\r\n\r\n\r\nfunction deleteTask(id) {\r\n  const remainingTasks = tasks.filter(task => id !== task.id);\r\n // setTasks(remainingTasks);\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  // var d = new Date();\r\n  // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/'+ id);\r\n  set(reference, {\r\n    id: null\r\n  });\r\n  fetchDataFromFirebase();\r\n}\r\n\r\n\r\nfunction editTask(id, newName) {\r\n  const editedTaskList = tasks.map(task => {\r\n  // if this task has the same ID as the edited task\r\n    if (id === task.id) {\r\n      //\r\n      const db = getDatabase();\r\n      var user = firebaseConfig.auth().currentUser\r\n      // var d = new Date();\r\n      // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n      const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/'+ task.id);\r\n      set(reference, {\r\n        todoid: task.id,\r\n        name : newName,\r\n        completed : task.completed\r\n      });\r\n      return {...task, name: newName}\r\n    }\r\n    return task;\r\n  });\r\n  fetchDataFromFirebase();\r\n  //setTasks(editedTaskList);\r\n}\r\n\r\nconst taskList = tasks\r\n.filter(FILTER_MAP[filter])\r\n.map(task => (\r\n  <Todo\r\n    id={task.id}\r\n    name={task.name}\r\n    completed={task.completed}\r\n    key={task.id}\r\n    toggleTaskCompleted={toggleTaskCompleted}\r\n    deleteTask={deleteTask}\r\n    editTask={editTask}\r\n  />\r\n));\r\n\r\nconst filterList = FILTER_NAMES.map(name => (\r\n  <FilterButton\r\n    key={name}\r\n    name={name}\r\n    isPressed={name === filter}\r\n    setFilter={setFilter}\r\n  />\r\n));\r\n\r\n\r\nfunction addTask(name) {\r\n  const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n \r\n  //Database related\r\n  const db = getDatabase();\r\n  var user = firebaseConfig.auth().currentUser\r\n  // var d = new Date();\r\n  // var datestring = d.getDate()  + \"-\" + (d.getMonth()+1) + \"-\" + d.getFullYear();\r\n  const reference = ref(db, 'users/' + user.uid +'/'+ datestring+ '/personal/'+ newTask.id);\r\n  set(reference, {\r\n    todoid: newTask.id,\r\n    name : newTask.name,\r\n    completed : newTask.completed\r\n  });\r\n  fetchDataFromFirebase();\r\n  //setTasks([...tasks, newTask]);\r\n}\r\n\r\n\r\nconst tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\nconst headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\nconst listHeadingRef = useRef(null);\r\nconst prevTaskLength = usePrevious(tasks.length);\r\n\r\nuseEffect(() => {\r\n  fetchDataFromFirebase();\r\n  CalculatePersonalScore();\r\n  if (tasks.length - prevTaskLength === -1) {\r\n    listHeadingRef.current.focus();\r\n  }\r\n}, [tasks.length, prevTaskLength]);\r\n\r\nconst { currentUser } = useContext(AuthContext);\r\nif (!currentUser) {\r\n  return <Redirect to=\"/\" />;\r\n}\r\n\r\nlet Progress = (props) => {\r\n  return (\r\n    <div className=\"Progress\" data-value={props.value}>\r\n      <div\r\n        className=\"Progress-Bar\"\r\n        style={{\r\n          width: `${props.value}%`,\r\n          backgroundSize: `${100 * 100 / props.value}% 100%`\r\n        }}        \r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nreturn (\r\n    <div>\r\n      <div className=\"todoapp stack-large\">\r\n        <h1>Personal</h1>\r\n        <Progress value={count} />\r\n      <Form addTask={addTask} />\r\n      <div className=\"filters btn-group stack-exception\">\r\n        {filterList}\r\n      </div>\r\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n        {/* {headingText} */}\r\n      </h2>\r\n      <ul\r\n        role=\"list\"\r\n        className=\"todo-list stack-large stack-exception\"\r\n        aria-labelledby=\"list-heading\"\r\n      >\r\n        {taskList}\r\n      </ul>\r\n    </div>\r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Personal;\r\n\r\n"]},"metadata":{},"sourceType":"module"}