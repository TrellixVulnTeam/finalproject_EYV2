{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\namas\\\\Downloads\\\\lifeInNumbers4-20211203T231224Z-001\\\\lifeInNumbers4\\\\src\\\\App.js\";\nimport React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Dashboard from \"./components/Dashboard\";\nimport LogIn from \"./components/LogIn\";\nimport SignUp from \"./components/SignUp\";\nimport { AuthProvider } from \"./components/Auth\";\n\nconst App = () => {\n  return /*#__PURE__*/React.createElement(AuthProvider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Home,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/dashboard\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: LogIn,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/signup\",\n    component: SignUp,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 11\n    }\n  }))));\n};\n\nexport default App; // import React, { useState, useRef, useEffect } from \"react\";\n// import Form from \"./components/Form\";\n// import FilterButton from \"./components/FilterButton\";\n// import Todo from \"./components/Todo\";\n// import { nanoid } from \"nanoid\";\n// import firebaseConfig from \"./firebase\";\n// function usePrevious(value) {\n//   const ref = useRef();\n//   useEffect(() => {\n//     ref.current = value;\n//   });\n//   return ref.current;\n// }\n// const FILTER_MAP = {\n//   All: () => true,\n//   Active: task => !task.completed,\n//   Completed: task => task.completed\n// };\n// const FILTER_NAMES = Object.keys(FILTER_MAP);\n// function App(props) {\n//   const [tasks, setTasks] = useState(props.tasks);\n//   const [filter, setFilter] = useState('All');\n//   function toggleTaskCompleted(id) {\n//     const updatedTasks = tasks.map(task => {\n//       // if this task has the same ID as the edited task\n//       if (id === task.id) {\n//         // use object spread to make a new obkect\n//         // whose `completed` prop has been inverted\n//         return {...task, completed: !task.completed}\n//       }\n//       return task;\n//     });\n//     setTasks(updatedTasks);\n//   }\n//   function deleteTask(id) {\n//     const remainingTasks = tasks.filter(task => id !== task.id);\n//     setTasks(remainingTasks);\n//   }\n//   function editTask(id, newName) {\n//     const editedTaskList = tasks.map(task => {\n//     // if this task has the same ID as the edited task\n//       if (id === task.id) {\n//         //\n//         return {...task, name: newName}\n//       }\n//       return task;\n//     });\n//     setTasks(editedTaskList);\n//   }\n//   const taskList = tasks\n//   .filter(FILTER_MAP[filter])\n//   .map(task => (\n//     <Todo\n//       id={task.id}\n//       name={task.name}\n//       completed={task.completed}\n//       key={task.id}\n//       toggleTaskCompleted={toggleTaskCompleted}\n//       deleteTask={deleteTask}\n//       editTask={editTask}\n//     />\n//   ));\n//   const filterList = FILTER_NAMES.map(name => (\n//     <FilterButton\n//       key={name}\n//       name={name}\n//       isPressed={name === filter}\n//       setFilter={setFilter}\n//     />\n//   ));\n//   function addTask(name) {\n//     const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\n//     setTasks([...tasks, newTask]);\n//   }\n//   const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\n//   const headingText = `${taskList.length} ${tasksNoun} remaining`;\n//   const listHeadingRef = useRef(null);\n//   const prevTaskLength = usePrevious(tasks.length);\n//   useEffect(() => {\n//     if (tasks.length - prevTaskLength === -1) {\n//       listHeadingRef.current.focus();\n//     }\n//   }, [tasks.length, prevTaskLength]);\n//   return (\n//     <div className=\"todoapp stack-large\">\n//       <Form addTask={addTask} />\n//       <div className=\"filters btn-group stack-exception\">\n//         {filterList}\n//       </div>\n//       <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\n//         {headingText}\n//       </h2>\n//       <ul\n//         role=\"list\"\n//         className=\"todo-list stack-large stack-exception\"\n//         aria-labelledby=\"list-heading\"\n//       >\n//         {taskList}\n//       </ul>\n//     </div>\n//   );\n// }\n// export default App;","map":{"version":3,"sources":["C:/Users/namas/Downloads/lifeInNumbers4-20211203T231224Z-001/lifeInNumbers4/src/App.js"],"names":["React","BrowserRouter","Router","Route","Switch","Home","Dashboard","LogIn","SignUp","AuthProvider","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,MAAzC,QAAuD,kBAAvD;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,YAAT,QAA6B,mBAA7B;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAChB,sBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,GAAlB;AAAsB,IAAA,SAAS,EAAEL,IAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,YAAlB;AAA+B,IAAA,SAAS,EAAEC,SAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAGE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,QAAlB;AAA2B,IAAA,SAAS,EAAEC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,eAIE,oBAAC,KAAD;AAAO,IAAA,KAAK,MAAZ;AAAa,IAAA,IAAI,EAAC,SAAlB;AAA4B,IAAA,SAAS,EAAEC,MAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,CADF,CADF,CADF;AAYD,CAbD;;AAeA,eAAeE,GAAfsourcesContent":["import React from \"react\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport LogIn from \"./components/LogIn\";\r\nimport SignUp from \"./components/SignUp\";\r\nimport { AuthProvider } from \"./components/Auth\";\r\n\r\n\r\nconst App = () => {\r\n  return (\r\n    <AuthProvider>\r\n      <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={Home} />\r\n          <Route exact path=\"/dashboard\" component={Dashboard}/>\r\n          <Route exact path=\"/login\" component={LogIn} />\r\n          <Route exact path=\"/signup\" component={SignUp} />\r\n        </Switch>\r\n      </Router>\r\n    </AuthProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\n\r\n\r\n// import React, { useState, useRef, useEffect } from \"react\";\r\n// import Form from \"./components/Form\";\r\n// import FilterButton from \"./components/FilterButton\";\r\n// import Todo from \"./components/Todo\";\r\n// import { nanoid } from \"nanoid\";\r\n// import firebaseConfig from \"./firebase\";\r\n\r\n\r\n// function usePrevious(value) {\r\n//   const ref = useRef();\r\n//   useEffect(() => {\r\n//     ref.current = value;\r\n//   });\r\n//   return ref.current;\r\n// }\r\n\r\n// const FILTER_MAP = {\r\n//   All: () => true,\r\n//   Active: task => !task.completed,\r\n//   Completed: task => task.completed\r\n// };\r\n\r\n// const FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\n// function App(props) {\r\n//   const [tasks, setTasks] = useState(props.tasks);\r\n//   const [filter, setFilter] = useState('All');\r\n\r\n//   function toggleTaskCompleted(id) {\r\n//     const updatedTasks = tasks.map(task => {\r\n//       // if this task has the same ID as the edited task\r\n//       if (id === task.id) {\r\n//         // use object spread to make a new obkect\r\n//         // whose `completed` prop has been inverted\r\n//         return {...task, completed: !task.completed}\r\n//       }\r\n//       return task;\r\n//     });\r\n//     setTasks(updatedTasks);\r\n//   }\r\n\r\n\r\n//   function deleteTask(id) {\r\n//     const remainingTasks = tasks.filter(task => id !== task.id);\r\n//     setTasks(remainingTasks);\r\n//   }\r\n\r\n\r\n//   function editTask(id, newName) {\r\n//     const editedTaskList = tasks.map(task => {\r\n//     // if this task has the same ID as the edited task\r\n//       if (id === task.id) {\r\n//         //\r\n//         return {...task, name: newName}\r\n//       }\r\n//       return task;\r\n//     });\r\n//     setTasks(editedTaskList);\r\n//   }\r\n\r\n//   const taskList = tasks\r\n//   .filter(FILTER_MAP[filter])\r\n//   .map(task => (\r\n//     <Todo\r\n//       id={task.id}\r\n//       name={task.name}\r\n//       completed={task.completed}\r\n//       key={task.id}\r\n//       toggleTaskCompleted={toggleTaskCompleted}\r\n//       deleteTask={deleteTask}\r\n//       editTask={editTask}\r\n//     />\r\n//   ));\r\n\r\n//   const filterList = FILTER_NAMES.map(name => (\r\n//     <FilterButton\r\n//       key={name}\r\n//       name={name}\r\n//       isPressed={name === filter}\r\n//       setFilter={setFilter}\r\n//     />\r\n//   ));\r\n\r\n//   function addTask(name) {\r\n//     const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n//     setTasks([...tasks, newTask]);\r\n//   }\r\n\r\n\r\n//   const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n//   const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n//   const listHeadingRef = useRef(null);\r\n//   const prevTaskLength = usePrevious(tasks.length);\r\n\r\n//   useEffect(() => {\r\n//     if (tasks.length - prevTaskLength === -1) {\r\n//       listHeadingRef.current.focus();\r\n//     }\r\n//   }, [tasks.length, prevTaskLength]);\r\n\r\n//   return (\r\n//     <div className=\"todoapp stack-large\">\r\n//       <Form addTask={addTask} />\r\n//       <div className=\"filters btn-group stack-exception\">\r\n//         {filterList}\r\n//       </div>\r\n//       <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n//         {headingText}\r\n//       </h2>\r\n//       <ul\r\n//         role=\"list\"\r\n//         className=\"todo-list stack-large stack-exception\"\r\n//         aria-labelledby=\"list-heading\"\r\n//       >\r\n//         {taskList}\r\n//       </ul>\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default App;\r\n"]},"metadata":{},"sourceType":"module"}